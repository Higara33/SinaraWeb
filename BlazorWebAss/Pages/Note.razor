@page "/note"
@page "/"

@using BlazorWebAss.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>My note</PageTitle>

<h1>My note</h1>

<p> </p>

@if (response == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (response.Errors == null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>FirstName</th>
                    <th>LastName</th>
                    <th>FatherName</th>
                    <th>Login</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in response.Data)
                {
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.FatherName</td>
                        <td>@user.Login</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p><em> @response.Errors.FirstOrDefault().ErrorMessage </em></p>
    }

    <button class="btn btn-primary" @onclick="UpdateTable">Update Table</button>
    <button class="btn btn-primary" @onclick="Edituser">Edit user</button>
    <button class="btn btn-primary" @onclick="Adduser">Add user</button>
    <button class="btn btn-primary" @onclick="DeleteUser">Delete user</button>
}

@code {
    private Response response;

    protected override async Task OnInitializedAsync()
    {
        UpdateTable();
    }

    private async Task UpdateTable()
    {
        response = await Http.GetFromJsonAsync<Response>("Api/Users/GetUsers");
        StateHasChanged();
    }

    void Edituser()
    {
        NavigationManager.NavigateTo("Edituser");
    }

    void Adduser()
    {
        NavigationManager.NavigateTo("Adduser");
    }

    void DeleteUser()
    {
        NavigationManager.NavigateTo("DeleteUser");
    }
}
