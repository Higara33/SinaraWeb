@page "/Adduser"

@using BlazorWebAss.Models

@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject IJSRuntime Js

<h2>AddUser</h2>

<div class="row">
    <EditForm Model="@user" OnValidSubmit="@Save">
        <DataAnnotationsValidator />
    <div class="col-md-6">
        <div class="form-group">
            <label for="FirstName"> First Name *</label>
            <input form="FirstName" class="form-control" @bind="@user.FirstName" />
            <ValidationMessage For="@(() => @user.FirstName)" />

        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="LastName"> Last Name *</label>
            <input form="LastName" class="form-control" @bind="@user.LastName" />
            <ValidationMessage For="@(() => @user.LastName)" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="FatherName"> FatherName *</label>
            <input form="FatherName" class="form-control" @bind="@user.FatherName" />
            <ValidationMessage For="@(() => @user.FatherName)" />
        </div>
    </div>
    <div class="col-md-6">
        <div class="form-group">
            <label for="Login"> Login *</label>
            <input form="Login" class="form-control" @bind="@user.Login" />
            <ValidationMessage For="@(() => @user.Login)" />
        </div>
    </div>
        <input type="submit" class="btn btn-primary" value="Save" />
        <input type="button" class="btn" @onclick="@Cancel" value="Cancel" />
    </EditForm>
</div>

@code {
    AddUserFormModel user = new();
    Response response = new();

    protected async Task Save()
    {
        var responseMessage = await Http.PostAsJsonAsync<AddUserFormModel>("Api/Users/AddUser", @user);
        response = await responseMessage.Content.ReadFromJsonAsync<Response>();
        if (response.Errors != null)
        {
            await Js.InvokeVoidAsync("alert", response.Errors.FirstOrDefault().ErrorMessage);
        }
        else
            NavigationManager.NavigateTo("note");
    }

    void Cancel()
    {
        NavigationManager.NavigateTo("note");
    }
}
