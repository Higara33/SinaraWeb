@page "/fetchdata"
@inject HttpClient Http

<PageTitle>Weather forecast</PageTitle>

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (response == null)
{
    <p><em>Your note is empty((</em></p>
}
else
{
    if (response.Errors == null)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>FirstName</th>
                    <th>LastName</th>
                    <th>FatherName</th>
                    <th>Login</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var user in response.Data)
                {
                    <tr>
                        <td>@user.FirstName</td>
                        <td>@user.LastName</td>
                        <td>@user.FatherName</td>
                        <td>@user.Login</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p><em> @response.Errors.FirstOrDefault().ErrorMessage </em></p>
    }

    <button class="btn btn-primary" @onclick="UpdateTable">Update Table</button>
}

@code {
    private Response response;

    protected override async Task OnInitializedAsync()
    {
        response = await Http.GetFromJsonAsync<Response>("Api/Users/GetUsers");
        StateHasChanged();
    }

    private async Task UpdateTable()
    {
        response = await Http.GetFromJsonAsync<Response>("Api/Users/GetUsers");
        StateHasChanged();
    }

    //private async Task AddUser()
    //{
    //    response = await Http.PostAsJsonAsync<Response>("Api/Users/GetUsers");


    //    StateHasChanged();
    //}



    public class Response
    {
        public ErrorResult[] Errors { get; set; }
        public User[] Data { get; set; }
    }

    public class User
    {
        public int Id { get; set; }
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string FatherName { get; set; }
        public string Login { get; set; }
        public bool Deleted { get; set; }
    }

    public class ErrorResult
    {
        public ErrorResult()
        {

        }

        public ErrorResult(string key, string msg)
        {
            ErrorKey = key;
            ErrorMessage = msg;
        }

        public string ErrorKey { get; set; }
        public string ErrorMessage { get; set; }
    }
}
